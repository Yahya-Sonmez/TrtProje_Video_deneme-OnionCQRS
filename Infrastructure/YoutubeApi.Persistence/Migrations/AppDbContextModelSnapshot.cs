// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YoutubeApi.Persistence.Context;

#nullable disable

namespace YoutubeApi.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("Categoriesid")
                        .HasColumnType("int");

                    b.Property<int>("Productsid")
                        .HasColumnType("int");

                    b.HasKey("Categoriesid", "Productsid");

                    b.HasIndex("Productsid");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("YoutubeApi.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 716, DateTimeKind.Local).AddTicks(9753),
                            IsDeleted = false,
                            Name = "Movies & Computers"
                        },
                        new
                        {
                            id = 2,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 716, DateTimeKind.Local).AddTicks(9784),
                            IsDeleted = false,
                            Name = "Baby"
                        },
                        new
                        {
                            id = 3,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 716, DateTimeKind.Local).AddTicks(9793),
                            IsDeleted = true,
                            Name = "Grocery"
                        });
                });

            modelBuilder.Entity("YoutubeApi.Domain.Entities.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priorty")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 717, DateTimeKind.Local).AddTicks(2565),
                            IsDeleted = false,
                            Name = "Elektrik",
                            ParentId = 0,
                            Priorty = 1
                        },
                        new
                        {
                            id = 2,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 717, DateTimeKind.Local).AddTicks(2567),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priorty = 2
                        },
                        new
                        {
                            id = 3,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 717, DateTimeKind.Local).AddTicks(2569),
                            IsDeleted = false,
                            Name = "Bilgisayar",
                            ParentId = 1,
                            Priorty = 1
                        },
                        new
                        {
                            id = 4,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 717, DateTimeKind.Local).AddTicks(2572),
                            IsDeleted = false,
                            Name = "Kadın",
                            ParentId = 2,
                            Priorty = 1
                        });
                });

            modelBuilder.Entity("YoutubeApi.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Detailid")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Detailid");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 721, DateTimeKind.Local).AddTicks(3118),
                            Description = "Makinesi quia.",
                            IsDeleted = false,
                            Title = "Sarmal."
                        },
                        new
                        {
                            id = 2,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 721, DateTimeKind.Local).AddTicks(3170),
                            Description = "Voluptas koştum ex esse makinesi.",
                            IsDeleted = true,
                            Title = "Eius anlamsız."
                        },
                        new
                        {
                            id = 3,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 721, DateTimeKind.Local).AddTicks(3277),
                            Description = "Consequuntur sevindi aut vitae göze.",
                            IsDeleted = false,
                            Title = "Ut."
                        });
                });

            modelBuilder.Entity("YoutubeApi.Domain.Entities.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            BrandId = 1,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 725, DateTimeKind.Local).AddTicks(5746),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Discount = 2.009637475954940m,
                            IsDeleted = false,
                            Price = 901.21m,
                            Title = "Small Rubber Keyboard"
                        },
                        new
                        {
                            id = 2,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 8, 12, 15, 50, 56, 725, DateTimeKind.Local).AddTicks(5978),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Discount = 2.821639908126280m,
                            IsDeleted = false,
                            Price = 379.90m,
                            Title = "Incredible Plastic Chicken"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("YoutubeApi.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("Categoriesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YoutubeApi.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("Productsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YoutubeApi.Domain.Entities.Detail", b =>
                {
                    b.HasOne("YoutubeApi.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YoutubeApi.Domain.Entities.Detail", null)
                        .WithMany("Details")
                        .HasForeignKey("Detailid");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("YoutubeApi.Domain.Entities.Product", b =>
                {
                    b.HasOne("YoutubeApi.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("YoutubeApi.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("YoutubeApi.Domain.Entities.Detail", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
